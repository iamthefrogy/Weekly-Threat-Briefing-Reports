name: Update IOCs CSV

on:
  push:
    branches: [ main ]
    paths:
      - "*.md"
      - "**/*.md"
  workflow_dispatch: {}
  schedule:
    - cron: "15 3 * * *"  # optional nightly safeguard

permissions:
  contents: write

concurrency:
  group: update-iocs-${{ github.ref }}
  cancel-in-progress: false

jobs:
  update-iocs:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Determine changed report files
        id: changes
        shell: bash
        run: |
          set -e
          git fetch --no-tags --depth=2 origin ${{ github.ref }}

          if [[ "${{ github.event_name }}" == "push" ]]; then
            BEFORE="${{ github.event.before }}"
            AFTER="${{ github.sha }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BEFORE="${{ github.event.pull_request.base.sha }}"
            AFTER="${{ github.event.pull_request.head.sha }}"
          else
            # workflow_dispatch / schedule
            BEFORE="$(git rev-parse HEAD~1 2>/dev/null || echo '')"
            AFTER="$(git rev-parse HEAD)"
          fi

          if [[ -n "$BEFORE" ]]; then
            DIFF_RANGE="$BEFORE..$AFTER"
            CHANGED=$(git diff --name-only "$DIFF_RANGE" -- '*.md' | tr '\n' ' ' || true)
          else
            # Fallback: scan all markdown files
            CHANGED=$(git ls-files '*.md' | tr '\n' ' ' || true)
          fi

          echo "Changed markdown files: $CHANGED"
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT

      - name: Run IOC extractor
        run: |
          set -e
          python scripts/extract_iocs.py ${{ steps.changes.outputs.changed }}

      - name: Commit changes (if IOCs.csv updated)
        shell: bash
        run: |
          set -e
          if [ -f IOCs.csv ]; then
            if ! git diff --quiet --exit-code IOCs.csv; then
              git config user.name "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git add IOCs.csv
              git commit -m "ci: update IOCs.csv from new/updated reports [skip ci]"
              git push
            else
              echo "No changes to IOCs.csv."
            fi
          else
            echo "IOCs.csv not found â€” nothing to commit."
          fi
