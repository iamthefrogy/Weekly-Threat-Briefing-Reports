name: Update IOCs CSV

on:
  push:
    branches: [ main ]
    # Run only when report markdown files change (you can adjust patterns)
    paths:
      - "*.md"
      - "**/*.md"
  workflow_dispatch: {}

# Needed so the workflow can push back changes to the repo
permissions:
  contents: write

# Avoid overlapping runs on the same branch
concurrency:
  group: update-iocs-${{ github.ref }}
  cancel-in-progress: false

jobs:
  update-iocs:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # so git diff works reliably

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (if any)
        run: |
          python -m pip install --upgrade pip
          # If you have a requirements.txt, this will install; otherwise it safely no-ops
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run IOC extractor
        run: |
          # If your script needs arguments, add them here. Otherwise it can just scan your repo.
          python extract_iocs.py

      - name: Commit changes (if IOCs.csv updated)
        run: |
          set -e
          # Only attempt a commit if IOCs.csv exists and changed
          if [ -f IOCs.csv ]; then
            if ! git diff --quiet --exit-code IOCs.csv; then
              git config user.name "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git add IOCs.csv
              git commit -m "ci: update IOCs.csv from new/updated reports [skip ci]"
              git push
            else
              echo "No changes to IOCs.csv."
            fi
          else
            echo "IOCs.csv not found â€” nothing to commit."
          fi
